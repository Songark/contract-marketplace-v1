{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
    "txHash": "0xe9a8d17712fccb954a58339318d2f1fa5015aa37334d14c0af15f0c671852770"
  },
  "proxies": [
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x81e5b0fa9af5a72ac645b8e8c2c7c1f18ee0075fc5b1405d2e6de98ab196725d",
      "kind": "transparent"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x32f67f7f2a8eabcff9290ad9867d5b4579f87897c11c8ecea06f98d8132f31de",
      "kind": "transparent"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0xfe558211eaefe01b43a363a068c2b3478265536d21d538fd5c44b0e970e1542d",
      "kind": "transparent"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0xf241b61b3a1395bb0891a1099418019ddaaf9f558c61cdb14b453fee8857ab33",
      "kind": "transparent"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xd03ed43ef3b7da8402782defb6cbf7ef00c28051d4afc8e1b2af05d8f91be699",
      "kind": "transparent"
    },
    {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0x93f07eecc31470bb9dc998b7d79f979196fd96c53aebad375cfb57a6241bdd34",
      "kind": "transparent"
    },
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x44a967a24b32198284e67507bd9c3699825e6762df4c020a750c9fb9d1ab1b65",
      "kind": "transparent"
    },
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x467b7d08193f5c6717266b001ebb0096498395f60ea1fbe036615f77dd409272",
      "kind": "transparent"
    }
  ],
  "impls": {
    "4eeff82c017797a85e7da05cc53d062ef5a8db048102d227d5bb0770c4bbb731": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x6e5490f0303aca3b6afb80b843177721054bd7692aaac866f29a8a7d03815bc9",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nftContracts",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_enum(NFTTypes)10010,t_address)",
            "contract": "NFTEngineV2",
            "src": "contracts\\engine\\NFTEngineV2.sol:17"
          },
          {
            "label": "_nftAuctions",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AuctionNFT)10062_storage))",
            "contract": "NFTEngineV2",
            "src": "contracts\\engine\\NFTEngineV2.sol:19"
          },
          {
            "label": "_nftIdsForAction",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "NFTEngineV2",
            "src": "contracts\\engine\\NFTEngineV2.sol:21"
          },
          {
            "label": "_nftSales",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(SellNFT)10031_storage))",
            "contract": "NFTEngineV2",
            "src": "contracts\\engine\\NFTEngineV2.sol:23"
          },
          {
            "label": "_nftIdsForSale",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "NFTEngineV2",
            "src": "contracts\\engine\\NFTEngineV2.sol:25"
          },
          {
            "label": "_nftMints",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(MintNFT)10018_storage))",
            "contract": "NFTEngineV2",
            "src": "contracts\\engine\\NFTEngineV2.sol:27"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "NFTEngineV2",
            "src": "contracts\\engine\\NFTEngineV2.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(NFTTypes)10010": {
            "label": "enum LTypes.NFTTypes",
            "members": [
              "customNFT",
              "fractionalNFT",
              "membershipNFT",
              "owndNFT"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AuctionNFT)10062_storage))": {
            "label": "mapping(address => mapping(uint256 => struct LTypes.AuctionNFT))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(MintNFT)10018_storage))": {
            "label": "mapping(address => mapping(uint256 => struct LTypes.MintNFT))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(SellNFT)10031_storage))": {
            "label": "mapping(address => mapping(uint256 => struct LTypes.SellNFT))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(NFTTypes)10010,t_address)": {
            "label": "mapping(enum LTypes.NFTTypes => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AuctionNFT)10062_storage)": {
            "label": "mapping(uint256 => struct LTypes.AuctionNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MintNFT)10018_storage)": {
            "label": "mapping(uint256 => struct LTypes.MintNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SellNFT)10031_storage)": {
            "label": "mapping(uint256 => struct LTypes.SellNFT)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionNFT)10062_storage": {
            "label": "struct LTypes.AuctionNFT",
            "members": [
              {
                "label": "bidIncRate",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bidPeriod",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "endTime",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "minPrice",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "buyNowPrice",
                "type": "t_uint128",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "highestBid",
                "type": "t_uint128",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "whitelistedBuyer",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isOnSale",
                "type": "t_bool",
                "offset": 20,
                "slot": "6"
              },
              {
                "label": "feeRecipients",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "feeRates",
                "type": "t_array(t_uint32)dyn_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(MintNFT)10018_storage": {
            "label": "struct LTypes.MintNFT",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(SellNFT)10031_storage": {
            "label": "struct LTypes.SellNFT",
            "members": [
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRecipients",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "feeRates",
                "type": "t_array(t_uint32)dyn_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "78795df890322f3cbfaa208c45ba040c58a354b9e0c13c465052d0b8044e7ec7": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x74c8ebbe3f4d66926a1693e4dba8bd21c8e6bd5b4141ca9180e0708be09ebc08",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_tokenContracts",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_enum(NFTTypes)7813,t_address)",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:72"
          },
          {
            "label": "_tokenPayments",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:74"
          },
          {
            "label": "_mapAuctionIds",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:77"
          },
          {
            "label": "_arrAuctions",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_array(t_struct(AuctionNFT)7865_storage)dyn_storage)",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:80"
          },
          {
            "label": "_mapSaleIds",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:83"
          },
          {
            "label": "_arrSales",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_array(t_struct(SellNFT)7836_storage)dyn_storage)",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:86"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "157",
            "type": "t_address",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:89"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(AuctionNFT)7865_storage)dyn_storage": {
            "label": "struct LTypes.AuctionNFT[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(SellNFT)7836_storage)dyn_storage": {
            "label": "struct LTypes.SellNFT[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(NFTTypes)7813": {
            "label": "enum LTypes.NFTTypes",
            "members": [
              "membershipNFT",
              "peasNFT",
              "pnftssNFT",
              "customNFT"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(AuctionNFT)7865_storage)dyn_storage)": {
            "label": "mapping(address => struct LTypes.AuctionNFT[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(SellNFT)7836_storage)dyn_storage)": {
            "label": "mapping(address => struct LTypes.SellNFT[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(NFTTypes)7813,t_address)": {
            "label": "mapping(enum LTypes.NFTTypes => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionNFT)7865_storage": {
            "label": "struct LTypes.AuctionNFT",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bidPeriod",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTime",
                "type": "t_uint64",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "minPrice",
                "type": "t_uint128",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "buyNowPrice",
                "type": "t_uint128",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "highestBid",
                "type": "t_uint128",
                "offset": 16,
                "slot": "2"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "whitelistedBuyer",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isOnSale",
                "type": "t_bool",
                "offset": 20,
                "slot": "6"
              },
              {
                "label": "feeRecipients",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "feeRates",
                "type": "t_array(t_uint32)dyn_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(SellNFT)7836_storage": {
            "label": "struct LTypes.SellNFT",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "feeRecipients",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "feeRates",
                "type": "t_array(t_uint32)dyn_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "42eb48f91b8fea0743a592fd2f3c9d9601c576b7d279adf770142542cbd431af": {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0xe6057c4a637c50c88092054d5d5711d56ab7544f24216b0967d67535aa077455",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_tokenContracts",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_enum(NFTTypes)8170,t_address)",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:72"
          },
          {
            "label": "_tokenPayments",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_enum(PayTypes)8175,t_address)",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:74"
          },
          {
            "label": "_mapAuctionIds",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:77"
          },
          {
            "label": "_arrAuctions",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_array(t_struct(AuctionNFT)8223_storage)dyn_storage)",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:80"
          },
          {
            "label": "_mapSaleIds",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:83"
          },
          {
            "label": "_arrSales",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_array(t_struct(SellNFT)8196_storage)dyn_storage)",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:86"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "157",
            "type": "t_address",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:89"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(AuctionNFT)8223_storage)dyn_storage": {
            "label": "struct LTypes.AuctionNFT[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(SellNFT)8196_storage)dyn_storage": {
            "label": "struct LTypes.SellNFT[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(NFTTypes)8170": {
            "label": "enum LTypes.NFTTypes",
            "members": [
              "membershipNFT",
              "peasNFT",
              "pnftssNFT",
              "customNFT"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(PayTypes)8175": {
            "label": "enum LTypes.PayTypes",
            "members": [
              "payEther",
              "payUSDC",
              "payPBRT",
              "payFiat"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(AuctionNFT)8223_storage)dyn_storage)": {
            "label": "mapping(address => struct LTypes.AuctionNFT[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(SellNFT)8196_storage)dyn_storage)": {
            "label": "mapping(address => struct LTypes.SellNFT[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(NFTTypes)8170,t_address)": {
            "label": "mapping(enum LTypes.NFTTypes => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(PayTypes)8175,t_address)": {
            "label": "mapping(enum LTypes.PayTypes => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionNFT)8223_storage": {
            "label": "struct LTypes.AuctionNFT",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minPrice",
                "type": "t_uint128",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "buyNowPrice",
                "type": "t_uint128",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "bidPeriod",
                "type": "t_uint128",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "endTime",
                "type": "t_uint128",
                "offset": 16,
                "slot": "2"
              },
              {
                "label": "highestPayType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "highestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "highestEther",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "feeRecipients",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "feeRates",
                "type": "t_array(t_uint32)dyn_storage",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SellNFT)8196_storage": {
            "label": "struct LTypes.SellNFT",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRecipients",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "feeRates",
                "type": "t_array(t_uint32)dyn_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "840813a9ca99e6b8d111f3e30f62a656691caee6e05a73ae963a20e86719b175": {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xe9f70bafb9d421cd385dce76c0d9a66f3d58c1a47953eb2d7831b74b10b7eb62",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "priceFeedUsd",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:69"
          },
          {
            "label": "_tokenContracts",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_enum(NFTTypes)8320,t_address)",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:72"
          },
          {
            "label": "_tokenPayments",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_enum(PayTypes)8326,t_address)",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:74"
          },
          {
            "label": "_mapAuctionIds",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:77"
          },
          {
            "label": "_arrAuctions",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_array(t_struct(AuctionNFT)8362_storage)dyn_storage)",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:80"
          },
          {
            "label": "_mapSaleIds",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:83"
          },
          {
            "label": "_arrSales",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_array(t_struct(SellNFT)8343_storage)dyn_storage)",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:86"
          },
          {
            "label": "_treasury",
            "offset": 0,
            "slot": "158",
            "type": "t_address",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:89"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "159",
            "type": "t_address",
            "contract": "NFTEngineV1",
            "src": "contracts\\engine\\NFTEngineV1.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(AuctionNFT)8362_storage)dyn_storage": {
            "label": "struct LTypes.AuctionNFT[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(SellNFT)8343_storage)dyn_storage": {
            "label": "struct LTypes.SellNFT[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_enum(NFTTypes)8320": {
            "label": "enum LTypes.NFTTypes",
            "members": [
              "membershipNFT",
              "peasNFT",
              "pnftSSNFT",
              "pnftSNFT",
              "pnftANFT",
              "pnftBNFT",
              "pnftCNFT",
              "customNFT"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(PayTypes)8326": {
            "label": "enum LTypes.PayTypes",
            "members": [
              "payAll",
              "payEther",
              "payUSDC",
              "payPBRT",
              "payFiat"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(AuctionNFT)8362_storage)dyn_storage)": {
            "label": "mapping(address => struct LTypes.AuctionNFT[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(SellNFT)8343_storage)dyn_storage)": {
            "label": "mapping(address => struct LTypes.SellNFT[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(NFTTypes)8320,t_address)": {
            "label": "mapping(enum LTypes.NFTTypes => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(PayTypes)8326,t_address)": {
            "label": "mapping(enum LTypes.PayTypes => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionNFT)8362_storage": {
            "label": "struct LTypes.AuctionNFT",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "buyNowPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bidPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "payType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "highestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(SellNFT)8343_storage": {
            "label": "struct LTypes.SellNFT",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "payType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
